
package pages

import (
	"github.com/timenglesf/bike-checkover-checklist/internal/shared"
	// "github.com/timenglesf/bike-checkover-checklist/ui/template/component"
	"github.com/timenglesf/bike-checkover-checklist/internal/models"
)

templ BikeDisplay(d *shared.TemplateData) {
	<div class="mb-4">
		<h1 class="text-3xl font-bold text-center">
			{ d.ChecklistDisplay.BikeDescription.Brand } { d.ChecklistDisplay.Model }
		</h1>
		<h2 class="text-xl font-bold text-center">{ d.ChecklistDisplay.Color }</h2>
	</div>
	<div class="mx-2">
		<ul class={ "flex", "flex-col", "gap-2", templ.KV("mb-4", d.ChecklistDisplay.Notes != "") }>
			@ChecklistEntry(d.ChecklistDisplay.BrakePad.Name, d.ChecklistDisplay.BrakePad.Description, d.ChecklistDisplay.BrakePad.Status)
			@ChecklistEntry(d.ChecklistDisplay.Chain.Name, d.ChecklistDisplay.Chain.Description, d.ChecklistDisplay.Chain.Status)
			@ChecklistEntry(d.ChecklistDisplay.Tires.Name, d.ChecklistDisplay.Tires.Description, d.ChecklistDisplay.Tires.Status)
			@ChecklistEntry(d.ChecklistDisplay.Cassette.Name, d.ChecklistDisplay.Cassette.Description, d.ChecklistDisplay.Cassette.Status)
			@ChecklistEntry(d.ChecklistDisplay.CablesHousing.Name, d.ChecklistDisplay.CablesHousing.Description, d.ChecklistDisplay.CablesHousing.Status)
			@ChecklistEntry(d.ChecklistDisplay.Tubes.Name, d.ChecklistDisplay.Tubes.Description, d.ChecklistDisplay.Tubes.Status)
			@ChecklistEntry(d.ChecklistDisplay.ChainRing.Name, d.ChecklistDisplay.ChainRing.Description, d.ChecklistDisplay.ChainRing.Status)
			@ChecklistEntry(d.ChecklistDisplay.FrontWheel.Name, d.ChecklistDisplay.FrontWheel.Description, d.ChecklistDisplay.FrontWheel.Status)
			@ChecklistEntry(d.ChecklistDisplay.PadFunction.Name, d.ChecklistDisplay.PadFunction.Description, d.ChecklistDisplay.PadFunction.Status)
			@ChecklistEntry(d.ChecklistDisplay.Derailleur.Name, d.ChecklistDisplay.Derailleur.Description, d.ChecklistDisplay.Derailleur.Status)
			@ChecklistEntry(d.ChecklistDisplay.RearWheel.Name, d.ChecklistDisplay.RearWheel.Description, d.ChecklistDisplay.RearWheel.Status)
			@ChecklistEntry(d.ChecklistDisplay.RotorRim.Name, d.ChecklistDisplay.RotorRim.Description, d.ChecklistDisplay.RotorRim.Status)
			@ChecklistEntry(d.ChecklistDisplay.Hanger.Name, d.ChecklistDisplay.Hanger.Description, d.ChecklistDisplay.Hanger.Status)
			@ChecklistEntry(d.ChecklistDisplay.Shifting.Name, d.ChecklistDisplay.Shifting.Description, d.ChecklistDisplay.Shifting.Status)
		</ul>
		if d.ChecklistDisplay.Notes != "" {
			<div tabindex="0" class="collapse collapse-arrow border-base-300 bg-base-200 border">
				<div class="collapse-title text-xl font-medium">Notes</div>
				<div class="collapse-content">
					<p>{ d.ChecklistDisplay.Notes }</p>
				</div>
			</div>
		}
	</div>
}

templ ChecklistEntry(name, desc string, itemStatus models.ChecklistItemStatus) {
	<li
		class={ "flex",
    "justify-between",
    "border-2", 
    "border-zinc-600", 
    "rounded-md", 
    "px-2", 
    "py-1", 
    "shadow-md",  
    templ.KV("bg-green-400", itemStatus==models.Pass), 
    templ.KV("bg-red-500", itemStatus==models.Fail),
    templ.KV("bg-warning", itemStatus==models.NotApplicable) }
	>
		<p class="text-xl">{ name }:</p>
		switch itemStatus {
			case models.Pass:
				<span class="text-lg font-semibold">Pass</span>
			case models.Fail:
				<span class="text-lg font-semibold">Fail</span>
			default:
				<span class="text-lg font-semibold">Not Applicable</span>
		}
	</li>
}
